import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.guardsquare', name: 'proguard-gradle', version: '7.1.0'
    }
}

plugins {
    id 'java'
}

group 'eu.jacobso.multinoisevis'
version '0.2.0.exp1'

repositories {
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/lxgaming/maven'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
}

dependencies {
    implementation group: 'org.json', name: 'json', version: '20200518', ext: 'jar'
    implementation group: 'commons-io', name: 'commons-io', version: '2.5', ext: 'jar'
    implementation group: 'it.unimi.dsi', name: 'fastutil', version: '8.2.1', ext: 'jar'
    implementation group: 'com.google.guava', name: 'guava', version: '21.0', ext: 'jar'
    implementation files('minecraft-server-jars/server-deobf.jar')
    runtimeOnly files('minecraft-server-jars/server.jar')
}

jar {
    manifest {
        attributes(
                'Main-Class': 'eu.jacobsjo.multinoisevis.Main',
                "Class-Path": configurations.runtimeClasspath.collect { it.getName() }.join(' ')
        )
    }
}

task prodJar(type: ProGuardTask) {
    dependsOn jar
    injars jar.archivePath
    outjars buildDir.getPath() + '/prod/MinecraftMultiNoiseVisualization/MinecraftMultiNoiseVisualization-' + project.version + '.jar'
    libraryjars(configurations.compileClasspath + files("${System.getProperty('java.home')}/jmods/"))
    applymapping 'minecraft-server-jars/server.txt'
    keep 'class *'
    keep 'class eu.jacobsjo.multinoisevis.Main{ public static void main(java.lang.String[]); }'
    keeppackagenames()
    keepnames 'class * {*;}'
    keepattributes()
    dontoptimize()
    dontshrink()
}

task copyLibs(type: Copy) {
    from configurations.compileClasspath{
        exclude 'server-deobf.jar'
    }
    into "$buildDir/prod/MinecraftMultiNoiseVisualization"
}

task copyConfig(type: Copy) {
    from "biome_colors.json"
    into "$buildDir/prod/MinecraftMultiNoiseVisualization"
}

task zipProd (type: Zip){
    dependsOn (
            prodJar,
            copyLibs,
            copyConfig
    )

    archiveFileName = "MinecraftMultiNoiseVisualization-" + project.version + ".zip"
    destinationDirectory = file("$buildDir")

    from "$buildDir/prod"
}